AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: >
  The turtle calculator, a dummy slow calculator for comprehensive code example

Parameters:
  SwaggerS3File:
    Description: '"openapi.yaml" file location'
    Default: ./openapi.yaml
    Type: String

Globals:
  Function:
    Runtime: nodejs12.x
    Timeout: 30
    MemorySize: 256
    Environment:
      Variables:
        OWNER_TABLE_NAME: !Ref OwnerTable
        PET_TABLE_NAME: !Ref PetTable

Resources:
  ApiGatewayRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-api-gateway-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:GetItem
                  - dynamodb:Scan
                  - dynamodb:Query
                Resource:
                  - !Sub ${OwnerTable.Arn}
                  - !Sub ${OwnerTable.Arn}/*
                  - !Sub ${PetTable.Arn}
                  - !Sub ${PetTable.Arn}/*

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-lambda-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: lambda.amazonaws.com
      Policies:
        - PolicyName: WriteCloudWatchLogs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:GetItem
                  - dynamodb:Scan
                  - dynamodb:Query
                Resource:
                  - !Sub ${OwnerTable.Arn}
                  - !Sub ${OwnerTable.Arn}/*
                  - !Sub ${PetTable.Arn}
                  - !Sub ${PetTable.Arn}/*

  OwnerTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}_Owner
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: Id
          AttributeType: N
        - AttributeName: Active
          AttributeType: N
      KeySchema:
        - AttributeName: Id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: ActiveIndex
          KeySchema:
            - AttributeName: Active
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  PetTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}_Pet
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: Id
          AttributeType: N
        - AttributeName: OwnerId
          AttributeType: N
      KeySchema:
        - AttributeName: Id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: OwnerIdIndex
          KeySchema:
            - AttributeName: OwnerId
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: veterinary
      Name: !Sub ${AWS::StackName}-api
      DefinitionBody:
        'Fn::Transform':
          Name: AWS::Include
          Parameters:
            Location: !Ref SwaggerS3File

  PetAll:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist
      Handler: pet.all
      Role: !GetAtt LambdaRole.Arn
      Events:
        Proxy:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /pet/all
            Method: get

  PetPaginate:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist
      Handler: pet.paginate
      Role: !GetAtt LambdaRole.Arn
      Events:
        Proxy:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /owner/{ownerId}/pet
            Method: get

Outputs:
  ApiUrl:
    Description: API URL
    Value: !Sub https://${Api}.execute-api.${AWS::Region}.amazonaws.com/calculator
